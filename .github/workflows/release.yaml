name: Release
on:
  workflow_dispatch:
    inputs:
      repo_token:
        description: "A personal access token with write permissions to the releases for this repo"
        type: "string"
        required: true
      release_type:
        description: "Release type (major, minor, patch"
        type: "string"
        required: false
        default: "patch"
      prerelease:
        description: "Whether this release is considered a prerelease"
        type: "boolean"
        default: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - uses: actions/checkout@v4
        with:
            ref: ${{ github.head_ref }}
      # install rust tooling
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo Bump
        id: cargo_bump
        uses: tj-actions/cargo-bump@v3
        with:
          release_type: ${{ inputs.release_type }}
      # commit version bump
      - name: Commit
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
            tagging_message: ${{ steps.cargo_bump.outputs.new_version }}
      - name: Build Release Binary
        run: cargo build --release
      - name: Zip Executable
        run: |
          zip --junk-paths markdown-cli ./target/release/markdown-cli
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.cargo_bump.outputs.new_version }}
          draft: false
          body: |
            Release version ${{ steps.cargo_bump.outputs.new_version }}
          prerelease: ${{ inputs.prerelease }}
          artifacts: markdown-cli.zip
          artifactContentType: application/zip
          tag_name: ${{ steps.cargo_bump.outputs.new_version }}
          commitish: ${{ steps.commit.outputs.commit_hash }}
        env:
          GITHUB_TOKEN: ${{ inputs.repo_token }}
